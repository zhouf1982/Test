# 项目启动后的访问端口
server.port=8800

# postgresql 数据库配置
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://127.0.0.1:5432/mytest2019
spring.datasource.username=postgres
spring.datasource.password=zhoufeng

## oracle 数据库配置
#spring.datasource.driverClassName = oracle.jdbc.driver.OracleDriver
#spring.datasource.url = jdbc:oracle:thin:@//ip:1521/dbname
#spring.datasource.username =
#spring.datasource.password =

logging.path=logs

# 打印sql，如果没异常可以关闭
logging.level.com.test.domain.repository=debug

# 下文为编码需要的相关配置，没异常不用管
mybatis.type-aliases-package=com.test.domain.entity
mybatis.config-locations=classpath:mybatis/mybatis-config.xml
mybatis.mapper-locations=classpath*:mybatis/mapper/*.xml

#http配置服务
#最大连接数
http.maxTotal = 100
#并发数
http.defaultMaxPerRoute = 20
#创建连接的最长时间
http.connectTimeout=1000
#从连接池中获取到连接的最长时间
http.connectionRequestTimeout=500
#数据传输的最长时间
http.socketTimeout=10000
#提交请求前测试连接是否可用
http.staleConnectionCheckEnabled=true

# devtools跟踪classes自动重启
spring.devtools.restart.additional-paths=com\\
# spring.devtools.restart.enabled=false

# THYMELEAF (ThymeleafAutoConfiguration)
#开启模板缓存（默认值：true）
spring.thymeleaf.cache=false
#Check that the template exists before rendering it.
spring.thymeleaf.check-template=true
#检查模板位置是否正确（默认值:true）
spring.thymeleaf.check-template-location=true
#Content-Type的值（默认值：text/html）
# spring.thymeleaf.content-type=text/html
#开启MVC Thymeleaf视图解析（默认值：true）
spring.thymeleaf.enabled=true
#模板编码
spring.thymeleaf.encoding=UTF-8
#要被排除在解析之外的视图名称列表，用逗号分隔
# spring.thymeleaf.excluded-view-names=
#要运用于模板之上的模板模式。另见StandardTemplate-ModeHandlers(默认值：HTML5)
spring.thymeleaf.mode=HTML5
#在构建URL时添加到视图名称前的前缀（默认值：classpath:/templates/）
spring.thymeleaf.prefix=classpath:/templates
#在构建URL时添加到视图名称后的后缀（默认值：.html）
spring.thymeleaf.suffix=.html
#Thymeleaf模板解析器在解析器链中的顺序。默认情况下，它排第一位。顺序从1开始，只有在定义了额外的TemplateResolver Bean时才需要设置这个属性。
# spring.thymeleaf.template-resolver-order=
#可解析的视图名称列表，用逗号分隔
# spring.thymeleaf.view-names=